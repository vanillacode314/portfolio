---
import Section from "@components/Section.svelte";
import Base from "@layouts/Base.astro";
import authors from "@data/authors";
import Button from "@components/Button.svelte";

const blogs = await Astro.glob("./*.md");
/* const blogs = []; */
---

<Base title="Blog">
  <Section title="Latest Posts">
    <div class="blogs">
      {
        blogs.map(async ({ frontmatter, url }) => {
          const author = authors.find(
            (author) => author.id === frontmatter.author
          );
          const slug = url.replace("/blog/", "");
          const { default: image } = await import(
            `../../assets/images/blog/${slug}.svg`
          );
          return (
            <a class="card" href={url}>
              <img
                class="card__image"
                src={image}
                alt={`${frontmatter.title} poster`}
                width="1024"
                height="1024"
              />
              <div class="card__body">
                <h3 class="card__author">By {author.name}</h3>
                <h2 class="card__title">{frontmatter.title}</h2>
                <p class="card__description">{frontmatter.description}</p>
                {/* <div class="actions"> */}
                {/* <Button href={url}>Read More</Button> */}
                {/* </div> */}
              </div>
            </a>
          );
        })
      }
    </div>
  </Section>
  <style lang="postcss">
    .blogs {
      margin-block: var(--larger-gap);
      display: grid;
      grid-template-columns: 1fr;
      /* grid-template-columns: repeat(2, 1fr); */
      /* @media (--lg-n-below) { */
      /*   grid-template-columns: 1fr; */
      /* } */
      .card {
        all: unset;
        transition: transform 0.3s ease-out;
        cursor: pointer;
        display: grid;
        overflow: hidden;
        align-items: center;
        gap: var(--larger-gap);
        &:is(:hover, :focus) {
          transform: scale(105%);
        }
        grid-template-columns: 1fr 2fr;
        @media (--lg-n-below) {
          grid-template-columns: 1fr 1fr;
          gap: var(--large-gap);
        }
        @media (--sm-n-below) {
          grid-template-columns: 1fr;
        }
      }
      .card__image {
        border-radius: var(--radius);
        @media (--sm-n-above) {
          /* max-inline-size: 14rem; */
        }
      }
      .card__body {
        display: flex;
        gap: var(--large-gap);
        flex-direction: column;
        @media (--md-n-below) {
          gap: var(--gap);
        }
        .card__title {
          font-family: var(--font-family);
          font-family: var(--headline-family);
          font-size: var(--h2-text);
          @media (--md-only) {
            font-size: var(--h3-text);
          }
        }
        .card__author {
          font-family: var(--font-family);
          font-size: var(--h4-text);
          color: var(--gray-6);
        }
        .card__description {
          font-family: var(--font-family);
          line-height: var(--font-lineheight-0);
          font-size: var(--body-text);
          flex-grow: 1;
        }
        /* .actions { */
        /*   display: flex; */
        /*   justify-content: flex-end; */
        /* } */
      }
    }
  </style>
</Base>
